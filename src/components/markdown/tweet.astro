---
import "./tweet.css";

export interface Props {
	link: string;
}
const { link } = Astro.props;

async function fetchTweet(id: string) {
	const oembedUrl = new URL("https://publish.twitter.com/oembed");
	oembedUrl.searchParams.set("url", id);
	oembedUrl.searchParams.set("omit_script", "true");
	oembedUrl.searchParams.set("dnt", "true");
	oembedUrl.searchParams.set("theme", "dark");
	oembedUrl.searchParams.set("maxWidth", "200");
	oembedUrl.searchParams.set("hide_thread", "true");
	return await fetch(oembedUrl)
		.then(
			async (res) =>
				(await res.json()) as {
					url: string;
					author_name: string;
					author_url: string;
					html: string;
				}
		)
		.catch((e) => {
			console.error(
				`[error]  astro-embed
					${e.status} - ${e.statusText}: Failed to fetch tweet ${id}`
			);
			return null;
		});
}

const tweet = await fetchTweet(link);
---

{tweet && <astro-embed-tweet class="tweet max-w-portfolio" set:html={tweet.html} />}

<script is:inline>
	if (!document.getElementById("tweet-script")) {
		const script = document.createElement("script");
		script.setAttribute("defer", "");
		script.setAttribute("id", "tweet-script");
		script.setAttribute("src", "https://platform.twitter.com/widgets.js");
		document.body.append(script);
	}
</script>
