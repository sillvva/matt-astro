---
import { cn } from "$/util";

export interface Props extends astroHTML.JSX.HTMLAttributes {
	tabs?: string[];
}

const { tabs = [] } = Astro.props;
const hasDots = tabs.length <= 2;
---

<script>
	function copyBlock(el: Element) {
		const idx = el.getAttribute("data-idx");
		const pre: HTMLPreElement | null | undefined = el.closest(".code-block")?.querySelector(idx ? `.panel-${idx} pre` : "pre");
		if (!pre) {
			alert("No code block found to copy");
			return;
		}
		navigator.clipboard.writeText(pre.innerText);
		document.querySelectorAll(".copy").forEach((btn) => {
			btn.querySelector("i")?.classList.remove("mdi-check");
			btn.querySelector("i")?.classList.add("mdi-content-copy");
		});
		el.querySelector("i")?.classList.add("mdi-check");
		el.querySelector("i")?.classList.remove("mdi-content-copy");
	}

	function expandBlock(el: Element) {
		el.closest(".code-block")?.classList.toggle("expanded");
		el.querySelector("i")?.classList.toggle("mdi-arrow-expand-vertical");
		el.querySelector("i")?.classList.toggle("mdi-arrow-collapse-vertical");
	}

	document.addEventListener("astro:page-load", () => {
		document.querySelectorAll("article .code-block .copy").forEach((btn) => {
			if (btn) btn.addEventListener("click", () => copyBlock(btn));
		});
		document.querySelectorAll("article .code-block .expand").forEach((btn) => {
			if (btn) btn.addEventListener("click", () => expandBlock(btn));
		});
	});
</script>

<nav
	class={cn(
		"flex items-center rounded-t justify-between gap-4 min-h-11 h-11",
		"border-b border-base-100 bg-neutral-900 p-2 text-sm",
		tabs.length && "group-[.tabbed]:py-0",
		Astro.props.class
	)}
>
	{
		hasDots && (
			<div class="flex space-x-1">
				<div class="h-2 w-2 rounded-full bg-gray-500" />
				<div class="h-2 w-2 rounded-full bg-gray-500" />
				<div class="h-2 w-2 rounded-full bg-gray-500" />
			</div>
		)
	}
	<slot />
	<div class="flex gap-3 max-sm:hidden">
		{
			tabs.length ? (
				tabs.map(async (_, idx) => (
					<>
						<button class={cn(`expand expand-${idx + 1}`, "hidden h-6 rounded-md text-neutral-100")} type="button">
							<i class="iconify h-6 w-6 mdi-arrow-expand-vertical" />
						</button>
						<button class={cn(`copy copy-${idx + 1}`, "hidden h-6 rounded-md text-neutral-100")} data-idx={idx + 1} type="button">
							<i class="iconify h-6 w-6 mdi-content-copy" />
						</button>
					</>
				))
			) : (
				<>
					<button class="expand hidden h-6 rounded-md text-neutral-100 group-has-[.line:nth-child(29)]:inline" type="button">
						<i class="iconify h-6 w-6 mdi-arrow-expand-vertical" />
					</button>
					<button class="copy h-6 rounded-md text-neutral-100" type="button">
						<i class="iconify h-6 w-6 mdi-content-copy" />
					</button>
				</>
			)
		}
	</div>
</nav>
