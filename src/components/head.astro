---
import "$/styles/base.scss";
import { ViewTransitions } from "astro:transitions";

export interface Props {
	title: string;
	description?: string;
	image?: string;
	articleMeta?: Record<string, string>;
	stylesheets?: string[];
}

const {
	title,
	description = "Experienced full stack web developer with a demonstrated history of working in the wireless industry.",
	image = "/images/preview-me3.jpg",
	articleMeta,
	stylesheets = []
} = Astro.props;

const domain = import.meta.env.VERCEL_URL || import.meta.env.PUBLIC_DOMAIN;
const protocol = domain.startsWith("localhost") ? "http://" : "https://";
const baseUrl = `${protocol}${domain}`;

const color = "#00aa99";
const dtitle = title ? `${title} - Matt DeKok` : "Matt DeKok";
const ogProperties: Record<string, string> = {
	title: dtitle,
	description: description,
	image: image && image.startsWith("http") ? image : new URL(image, baseUrl).toString(),
	url: new URL(Astro.url.pathname, baseUrl).toString()
};
const ogOnlyProperties: Record<string, string> = {
	...ogProperties,
	type: "website",
	site_name: dtitle
};
const twProperties: Record<string, string> = {
	creator: "@sillvvasensei",
	card: "summary_large_image",
	...ogProperties
};
const articleProperties: Record<string, string> = {
	...articleMeta
};
---

<meta charset="utf-8" />
<meta name="generator" content={Astro.generator} />
<meta name="viewport" content="width=device-width, initial-scale=1" />
<title>{dtitle}</title>
<meta name="description" content={description} />
<link rel="icon" href="/favicon.png" />
<link rel="apple-touch-icon" href={new URL("/icon_x128.png", baseUrl).toString()} />
<link rel="manifest" href="/manifest.webmanifest" />
<link rel="canonical" href={ogProperties.url} />

<link rel="preload" href="https://fonts.googleapis.com/css?family=Roboto Flex" as="style" />
<link rel="preload" href="https://fonts.googleapis.com/css?family=Montserrat" as="style" />

<link rel="stylesheet" href="https://fonts.googleapis.com/css?family=Roboto Flex" />
<link rel="stylesheet" href="https://fonts.googleapis.com/css?family=Montserrat" />

<meta name="mobile-web-app-capable" content="yes" />
<meta name="msapplication-TileColor" content={color} />
<meta name="msapplication-tap-highlight" content="no" />
<meta name="theme-color" content={color} />
{
	Object.keys(articleProperties).map((t) => {
		return <meta property={`article:${t}`} content={articleProperties[t]} />;
	})
}
{
	Object.keys(ogOnlyProperties).map((t) => {
		return <meta name={t} property={`og:${t}`} content={ogOnlyProperties[t]} />;
	})
}
{
	Object.keys(twProperties).map((t) => {
		return <meta name={`twitter:${t}`} content={twProperties[t]} />;
	})
}
{
	stylesheets.map((href) => {
		return <link rel="stylesheet" href={href} />;
	})
}
<ViewTransitions fallback="swap" />
