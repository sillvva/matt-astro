---
interface Props {
	headings: Array<{
		depth: number;
		slug: string;
		text: string;
	}>;
}

const { headings } = Astro.props;

type ToC = { depth: number; slug: string; text: string; children: ToC }[];

const toc: ToC = [];
for (const heading of headings) {
	const { depth, slug, text } = heading;
	const last = toc[toc.length - 1];
	const item = { depth, slug, text, children: [] as ToC };
	if (!last) {
		toc.push(item);
		continue;
	}
	if (depth > last.depth) {
		last.children.push(item);
		continue;
	}
	if (depth === last.depth) {
		toc.push(item);
		continue;
	}
	if (depth < last.depth) {
		let parent = last;
		while (depth < parent.depth) {
			parent = toc[toc.length - 1];
		}
		parent.children.push(item);
		continue;
	}
}
console.log(toc);
---

<!-- <ul class="menu bg-base-200 w-56 rounded-box">
  {toc.forEach((item) => {
    if (item.children.length) {

    }
    else {
      return <li><a href={`#${item.slug}`}>{item.text}</a></li>;
    }
  })}

  <li><a>Item 1</a></li>
  <li>
    <a>Parent</a>
    <ul>
      <li><a>level 2 item 1</a></li>
      <li><a>level 2 item 2</a></li>
      <li>
        <a>Parent</a>
        <ul>
          <li><a>level 3 item 1</a></li>
          <li><a>level 3 item 2</a></li>
        </ul>
      </li>
    </ul>
  </li>
  <li><a>Item 3</a></li>
</ul> -->
