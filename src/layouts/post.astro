---
import type { Props as HeadProps } from "$components/head.astro";
import ResponsiveImage from "$src/components/responsive-image.astro";
import PortfolioLayout from "./portfolio.astro";

interface Props extends HeadProps {
	slug: string;
	data: {
		updated?: Date | undefined;
		title: string;
		description: string;
		image: {
			height: number;
			src: string;
			width: number;
			format: "png" | "webp" | "jpeg" | "jpg" | "svg" | "tiff" | "gif";
		};
		full: boolean;
		date: Date;
		tags: string[];
	};
}

const { title, description, image, full, date, updated } = Astro.props.data;
const slug = Astro.props.slug;

const formattedDate = new Date(date).toLocaleDateString("en-US", {
	month: "long",
	day: "numeric",
	year: "numeric"
});
const formattedUpdate = new Date(updated || "").toLocaleDateString("en-US", {
	month: "long",
	day: "numeric",
	year: "numeric"
});
---

<PortfolioLayout
	{title}
	{description}
	image={image.src}
	stylesheets={["/styles/prism-one-dark.css"]}
	articleMeta={{
		published_date: date.toISOString(),
		...(updated && { modified_date: updated.toISOString() })
	}}
>
	<article class="mx-auto max-w-4xl">
		<p class="mb-2 text-sm text-theme-faded" aria-label="Date published">
			Posted: <span class="underline decoration-dotted underline-offset-2">{formattedDate}</span>
			{
				updated && (
					<span class="block sm:inline sm:pl-4">
						Updated: <span class="underline decoration-dotted underline-offset-2">{formattedUpdate}</span>
					</span>
				)
			}
		</p>
		{
			!full && (
				<div class="relative aspect-video">
					<ResponsiveImage
						src={image}
						alt={title}
						transition={`image_${slug}`}
						sizes={[300, 600, 900]}
						class="h-full w-full object-cover object-center pb-4"
					/>
				</div>
			)
		}
		<section>
			<slot />
		</section>
	</article>
</PortfolioLayout>
